/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SpectrogramPlayerPanel.java
 *
 * Created on Dec 12, 2011, 11:46:03 PM
 */
package org.rwshop.swing.audio.visualization;

import java.awt.Adjustable;
import javax.swing.JScrollBar;
import org.robokind.api.audio.WavBuffer;
import org.robokind.api.audio.WavPlayer;
import org.robokind.api.audio.processing.WavBufferProcessor;
import org.robokind.api.audio.processing.WavProcessor;
import org.rwshop.swing.common.scaling.LinkedScrollbarListener;
import org.rwshop.swing.common.scaling.ScalingScrollWheelListener;
import org.rwshop.swing.common.scaling.ScalingManager;
import org.rwshop.swing.common.scaling.ScrollingScalableComponent;

/**
 *
 * @author matt
 */
public class SpectrogramPlayerPanel extends javax.swing.JPanel {
    private LinkedScrollbarListener myLinkedScrollListener;
    private ScalingScrollWheelListener myScalingWheelListener;
    /** Creates new form SpectrogramPlayerPanel */
    public SpectrogramPlayerPanel() {
        initComponents();
    }
    
    public void init(WavPlayer player, ScalingManager scalingManager){
        if(player == null || scalingManager == null){
            throw new NullPointerException();
        }
        WavProcessor proc = new WavBufferProcessor(player.getWavBuffer());
        ScrollingScalableComponent comp = new ScrollingScalableComponent(
                        myWavSpectrogramPanel, jScrollPane1);
        scalingManager.addComponent(comp);
        myWavSpectrogramPanel.init(proc, player);
        wavPlayControlPanel1.init(player);
        wavPlayerPositionPanel1.init(player);
        
        myLinkedScrollListener = new LinkedScrollbarListener(
                Adjustable.HORIZONTAL, scalingManager);
        JScrollBar scrollbar = jScrollPane1.getHorizontalScrollBar();
        scrollbar.addAdjustmentListener(myLinkedScrollListener);
        
        myScalingWheelListener = new ScalingScrollWheelListener();
        myScalingWheelListener.init(jScrollPane1, scalingManager);
        myWavSpectrogramPanel.addMouseWheelListener(myScalingWheelListener);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        myWavSpectrogramPanel = new org.rwshop.swing.audio.visualization.WavSpectrogramPanel();
        wavPlayControlPanel1 = new org.rwshop.swing.audio.wav.WavPlayControlPanel();
        wavPlayerPositionPanel1 = new org.rwshop.swing.audio.wav.WavPlayerPositionPanel();

        myWavSpectrogramPanel.setPreferredSize(new java.awt.Dimension(620, 120));

        javax.swing.GroupLayout myWavSpectrogramPanelLayout = new javax.swing.GroupLayout(myWavSpectrogramPanel);
        myWavSpectrogramPanel.setLayout(myWavSpectrogramPanelLayout);
        myWavSpectrogramPanelLayout.setHorizontalGroup(
            myWavSpectrogramPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 620, Short.MAX_VALUE)
        );
        myWavSpectrogramPanelLayout.setVerticalGroup(
            myWavSpectrogramPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 145, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(myWavSpectrogramPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(wavPlayControlPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(wavPlayerPositionPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 622, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(wavPlayerPositionPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(wavPlayControlPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private org.rwshop.swing.audio.visualization.WavSpectrogramPanel myWavSpectrogramPanel;
    private org.rwshop.swing.audio.wav.WavPlayControlPanel wavPlayControlPanel1;
    private org.rwshop.swing.audio.wav.WavPlayerPositionPanel wavPlayerPositionPanel1;
    // End of variables declaration//GEN-END:variables
}
