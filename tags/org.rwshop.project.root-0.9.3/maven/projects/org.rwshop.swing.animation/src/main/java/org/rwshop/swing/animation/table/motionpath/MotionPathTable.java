/*
 * Copyright 2011 Hanson Robokind LLC.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * MotionPathTable.java
 *
 * Created on Feb 7, 2011, 5:11:27 PM
 */

package org.rwshop.swing.animation.table.motionpath;

import javax.swing.border.EmptyBorder;
import org.robokind.api.animation.editor.AnimationEditor;
import org.robokind.api.animation.editor.ChannelEditor;
import org.robokind.api.animation.editor.MotionPathEditor;

/**
 *
 * @author Matthew Stevenson <www.robokind.org>
 */
public class MotionPathTable extends javax.swing.JPanel {
    private MotionPathTablePathListener myMotionPathListener;
    private MotionPathTableModel myTableModel;
    private AnimationEditor myAnimationEditor;
    private MotionPathEditor myController;
    private MotionPathTableContextMenu myContextMenu;
    private MotionPathTableListener myTableListener;
    private MotionPathTableAnimationListener myAnimationListener;

    /** Creates new form MotionPathTable */
    public MotionPathTable() {
        initComponents();
        myTableModel = new MotionPathTableModel();
        myTable.setModel(myTableModel);
        myMotionPathListener = new MotionPathTablePathListener(myTableModel);
        myContextMenu = new MotionPathTableContextMenu(myTable);
        myTableListener = new MotionPathTableListener(myTable);
        myTable.getSelectionModel().addListSelectionListener(myTableListener);
        myAnimationListener = new MotionPathTableAnimationListener();
        myAnimationListener.init(this);
        myMotionPathListener.setTable(myTable);
        jScrollPane1.setBorder(new EmptyBorder(0, 0, 0, 0));
    }

    /**
     *
     * @param ac
     */
    public void setAnimationController(AnimationEditor ac){
        if(myAnimationEditor == ac){
            return;
        }
        myAnimationEditor = ac;
        ChannelEditor cc = ac == null ? null : ac.getSelected();
        MotionPathEditor mpc = cc == null ? null : cc.getSelected();
        myAnimationListener.setController(ac);
        setController(mpc);
    }

    /**
     *
     * @param mpc
     */
    public void setController(MotionPathEditor mpc){
        if(myController == mpc){
            return;
        }
        myMotionPathListener.cleanConsumer();
        myController = mpc;
        myContextMenu.setController(myController);
        myTableModel.setController(myController);
        myTableListener.setController(myController);
        if(myController == null){
            return;
        }
        myController.addConsumer(myMotionPathListener);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        myTable = new javax.swing.JTable();

        myTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        myTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(myTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable myTable;
    // End of variables declaration//GEN-END:variables

}
