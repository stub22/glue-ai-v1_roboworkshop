/*
 * Copyright 2013 Hanson Robokind LLC.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * AvroQpidConnectionPanel.java
 *
 * Created on Mar 12, 2013, 12:26:38 PM
 */
package org.rwshop.swing.messaging.monitor;

import javax.swing.JOptionPane;
import org.apache.avro.Schema;
import org.rwshop.swing.common.HistoricalComboBoxModel;

/**
 *
 * @author matt
 */
public class AvroQpidConnectionPanel extends javax.swing.JPanel {
    private OSGiSchemaSelector mySchemaSelector;
    private AvroQpidConnector myConnector;
    private AvroTablePanel myAvroTable;
    private HistoricalComboBoxModel myIPModel;
    private HistoricalComboBoxModel myDestModel;
    
    /** Creates new form AvroQpidConnectionPanel */
    public AvroQpidConnectionPanel() {
        initComponents();
        
        myIPModel = new HistoricalComboBoxModel(
                "org.rwshop.swing.messaging.monitor", "ip_history", "127.0.0.1");
        jComboBox2.setModel(myIPModel);
        jComboBox2.setEditable(true);
        
        myDestModel = new HistoricalComboBoxModel(
                "org.rwshop.swing.messaging.monitor", "dest_history", "");
        jComboBox3.setModel(myDestModel);
        jComboBox3.setEditable(true);
    }
    
    public void setSchemaSelector(OSGiSchemaSelector selector){
        mySchemaSelector = selector;
        jComboBox1.setModel(new AvroComboBoxModel(mySchemaSelector));
    }
    
    public void setConnector(AvroQpidConnector connector){
        myConnector = connector;
    }
    
    public void setAvroTable(AvroTablePanel avroTable) {
        myAvroTable = avroTable;
        
        pushSchema();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jComboBox2 = new javax.swing.JComboBox();
        jComboBox3 = new javax.swing.JComboBox();

        jLabel1.setText("IP Address:");

        jLabel2.setText("Destination:");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel3.setText("Schema");

        jButton1.setText("Disconnect");
        jButton1.setEnabled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Connect");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBox1, 0, 280, Short.MAX_VALUE)
                            .addComponent(jComboBox2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBox3, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            myConnector.setIPAddress(myIPModel.getSelectedItem().toString());
        } catch(IllegalArgumentException e) {
            JOptionPane.showMessageDialog(
                    this,
                    "Invalid IP address" + myIPModel.getSelectedItem().toString(),
                    "Invalid IP address", JOptionPane.ERROR_MESSAGE);
            
            return;
        }
        
        myConnector.setDestinationString(
                myDestModel.getSelectedItem().toString());
        
        pushSchema();
        
        try {
            myConnector.connect();
            
            jButton1.setEnabled(true);
            jButton2.setEnabled(false);
        } catch(Exception e) {
            JOptionPane.showMessageDialog(
                    this,
                    "Error: " + e.getMessage(),
                    "Invalid IP address", JOptionPane.ERROR_MESSAGE);
            
            jButton1.setEnabled(false);
            jButton2.setEnabled(true);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void pushSchema() {
        if(myConnector == null || mySchemaSelector == null) {
            return;
        }
        
        for(Schema schema: mySchemaSelector.getSchemas()) {
            if(schema.getName() == jComboBox1.getSelectedItem()) {
                myConnector.setSchema(schema);
                
                if(myAvroTable != null) {
                    myAvroTable.setSchema(schema);
                }
                
                break;
            }
        }
    }
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        myConnector.disconnect();
        
        if(myAvroTable != null) {
            myAvroTable.setSchema(null);
        }
        
        jButton1.setEnabled(false);
        jButton2.setEnabled(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    // End of variables declaration//GEN-END:variables
}
